name: Advanced CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate Version
        id: version
        run: |
          VERSION=$(date +'%Y.%m.%d').${{ github.run_number }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  lint-and-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install Dependencies
        run: npm ci
      - name: Run Linters
        run: npm run lint
      - name: Run Unit Tests
        run: npm run test:unit
      - name: Run Integration Tests
        run: npm run test:integration

  build-and-push:
    needs: [setup, lint-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY }}/app:${{ needs.setup.outputs.version }}
            ${{ secrets.CONTAINER_REGISTRY }}/app:latest

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            kubectl set image deployment/app app=${{ secrets.CONTAINER_REGISTRY }}/app:${{ needs.setup.outputs.version }}

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            # Blue-Green Deployment Strategy
            kubectl apply -f k8s/production/
            kubectl rollout status deployment/app
            kubectl set image deployment/app app=${{ secrets.CONTAINER_REGISTRY }}/app:${{ needs.setup.outputs.version }}

  post-deploy-checks:
    needs: [deploy-production]
    runs-on: ubuntu-latest
    steps:
      - name: Run Smoke Tests
        run: |
          curl -f https://api.yourapp.com/health || exit 1
      - name: Notify Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: Deployment successful!